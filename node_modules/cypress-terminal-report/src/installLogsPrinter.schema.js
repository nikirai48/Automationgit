"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.InstallLogsPrinterSchema = void 0;
const superstruct_1 = require("superstruct");
const InstallLogsPrinterSchema = (0, superstruct_1.object)({
    printLogsToConsole: (0, superstruct_1.optional)((0, superstruct_1.enums)(['onFail', 'always', 'never'])),
    printLogsToFile: (0, superstruct_1.optional)((0, superstruct_1.enums)(['onFail', 'always', 'never'])),
    includeSuccessfulHookLogs: (0, superstruct_1.optional)((0, superstruct_1.boolean)()),
    defaultTrimLength: (0, superstruct_1.optional)((0, superstruct_1.number)()),
    commandTrimLength: (0, superstruct_1.optional)((0, superstruct_1.number)()),
    routeTrimLength: (0, superstruct_1.optional)((0, superstruct_1.number)()),
    compactLogs: (0, superstruct_1.optional)((0, superstruct_1.min)((0, superstruct_1.number)(), 0)),
    outputCompactLogs: (0, superstruct_1.optional)((0, superstruct_1.union)([(0, superstruct_1.min)((0, superstruct_1.number)(), -1), (0, superstruct_1.boolean)()])),
    outputRoot: (0, superstruct_1.optional)((0, superstruct_1.string)()),
    specRoot: (0, superstruct_1.optional)((0, superstruct_1.string)()),
    outputTarget: (0, superstruct_1.optional)((0, superstruct_1.record)((0, superstruct_1.string)(), (0, superstruct_1.union)([(0, superstruct_1.string)(), (0, superstruct_1.func)()]))),
    collectTestLogs: (0, superstruct_1.optional)((0, superstruct_1.func)()),
    logToFilesOnAfterRun: (0, superstruct_1.optional)((0, superstruct_1.boolean)()),
    outputVerbose: (0, superstruct_1.optional)((0, superstruct_1.boolean)()),
    debug: (0, superstruct_1.optional)((0, superstruct_1.boolean)()),
});
exports.InstallLogsPrinterSchema = InstallLogsPrinterSchema;
